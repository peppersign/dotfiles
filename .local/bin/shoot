#!/bin/env bash

#shoot: a wrapper around the mss utility
#Possible use cases:
#    $ shoot                 #Shoots the 1st monitor (default), name is declared as the current time
#    $ shoot 2               #Shoots the 2nd monitor, name is declared as the current time
#    $ shoot image.png       #Shoots the 1st monitor, name is defined as "image.png"
#    $ shoot pic.png 2       #Shoots the 2nd monitor, name is defined as "pic.png"


#-----SAVE SCREENSHOOTS IN-----#
FOLDER="$HOME/screenshoots/"
#------------------------------#


function handle {
    ss_monitor=${1:-1}
    ss_name=${2:-$(date +"Screen_%d-%m-%y__%H:%M.png")} 

    [[ -a "$FOLDER/$ss_name" ]] && ss_name="(cp)_$ss_name"
    mss -q -l 0 -m $ss_monitor -o "$FOLDER/$ss_name" 

    action=$(dunstify -A "default,Open" -h string:x-dunst-stack-tag:screenshoot -i "$FOLDER/$ss_name" "Ó¶Å")
    case "$action" in
        "default") i3-msg 'workspace 4'; exec sxiv -aq "$FOLDER/$ss_name" ;;
        *) exit 0;;
    esac

}


for arg in "$@"; do
    case $arg in
        [0-9]) monitor="$arg";;
        *) name="$arg"
    esac
done

handle "$monitor" "$name"


